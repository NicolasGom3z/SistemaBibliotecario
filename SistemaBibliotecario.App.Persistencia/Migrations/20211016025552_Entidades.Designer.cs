// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaBibliotecario.App.Persistencia;

namespace SistemaBibliotecario.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211016025552_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("aut_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Bibliotecario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("bib_apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bib_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bib_identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bib_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bib_telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("bib_turnBibid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("bib_turnBibid");

                    b.ToTable("Bibliotecarios");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.CategoriaLibro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("catLibro_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("CategoriasLibro");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Editorial", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("edit_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Ejemplar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ejem_estEjemid")
                        .HasColumnType("int");

                    b.Property<int?>("ejem_libid")
                        .HasColumnType("int");

                    b.Property<string>("ejem_scdd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ejem_estEjemid");

                    b.HasIndex("ejem_libid");

                    b.ToTable("Ejemplares");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.EstadoEjemplar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estadoEjemplar_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EstadosEjemplar");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.IdiomaLibro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("idiomaLibro_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("IdiomasLibro");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Libro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("lib_autid")
                        .HasColumnType("int");

                    b.Property<int?>("lib_catLibroid")
                        .HasColumnType("int");

                    b.Property<int?>("lib_editid")
                        .HasColumnType("int");

                    b.Property<DateTime>("lib_fechaPub")
                        .HasColumnType("datetime2");

                    b.Property<int?>("lib_idioLibroid")
                        .HasColumnType("int");

                    b.Property<string>("lib_isbn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lib_numCapt")
                        .HasColumnType("int");

                    b.Property<int>("lib_numPag")
                        .HasColumnType("int");

                    b.Property<string>("lib_sinopsis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("lib_tipoLibroid")
                        .HasColumnType("int");

                    b.Property<string>("lib_titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("lib_autid");

                    b.HasIndex("lib_catLibroid");

                    b.HasIndex("lib_editid");

                    b.HasIndex("lib_idioLibroid");

                    b.HasIndex("lib_tipoLibroid");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Reserva", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("reser_bibid")
                        .HasColumnType("int");

                    b.Property<int>("reser_diasPrest")
                        .HasColumnType("int");

                    b.Property<int?>("reser_ejemid")
                        .HasColumnType("int");

                    b.Property<DateTime>("reser_fechDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("reser_fechReserva")
                        .HasColumnType("datetime2");

                    b.Property<float>("reser_multa")
                        .HasColumnType("real");

                    b.Property<int?>("reser_usuid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("reser_bibid");

                    b.HasIndex("reser_ejemid");

                    b.HasIndex("reser_usuid");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.TipoLibro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("tipoLibro_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TiposLibro");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.TurnoBibliotecario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("turn_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TurnosBibliotecario");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("usu_apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("usu_direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("usu_email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("usu_identificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("usu_nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("usu_telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Bibliotecario", b =>
                {
                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.TurnoBibliotecario", "bib_turnBib")
                        .WithMany()
                        .HasForeignKey("bib_turnBibid");

                    b.Navigation("bib_turnBib");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Ejemplar", b =>
                {
                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.EstadoEjemplar", "ejem_estEjem")
                        .WithMany()
                        .HasForeignKey("ejem_estEjemid");

                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.Libro", "ejem_lib")
                        .WithMany()
                        .HasForeignKey("ejem_libid");

                    b.Navigation("ejem_estEjem");

                    b.Navigation("ejem_lib");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Libro", b =>
                {
                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.Autor", "lib_aut")
                        .WithMany()
                        .HasForeignKey("lib_autid");

                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.CategoriaLibro", "lib_catLibro")
                        .WithMany()
                        .HasForeignKey("lib_catLibroid");

                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.Editorial", "lib_edit")
                        .WithMany()
                        .HasForeignKey("lib_editid");

                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.IdiomaLibro", "lib_idioLibro")
                        .WithMany()
                        .HasForeignKey("lib_idioLibroid");

                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.TipoLibro", "lib_tipoLibro")
                        .WithMany()
                        .HasForeignKey("lib_tipoLibroid");

                    b.Navigation("lib_aut");

                    b.Navigation("lib_catLibro");

                    b.Navigation("lib_edit");

                    b.Navigation("lib_idioLibro");

                    b.Navigation("lib_tipoLibro");
                });

            modelBuilder.Entity("SistemaBibliotecario.App.Dominio.Entidades.Reserva", b =>
                {
                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.Bibliotecario", "reser_bib")
                        .WithMany()
                        .HasForeignKey("reser_bibid");

                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.Ejemplar", "reser_ejem")
                        .WithMany()
                        .HasForeignKey("reser_ejemid");

                    b.HasOne("SistemaBibliotecario.App.Dominio.Entidades.Usuario", "reser_usu")
                        .WithMany()
                        .HasForeignKey("reser_usuid");

                    b.Navigation("reser_bib");

                    b.Navigation("reser_ejem");

                    b.Navigation("reser_usu");
                });
#pragma warning restore 612, 618
        }
    }
}
